"""Added data year and month

Revision ID: a52220c4b05b
Revises: 966f70db0d0b
Create Date: 2024-06-12 00:32:07.795312

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = "a52220c4b05b"
down_revision: Union[str, None] = "966f70db0d0b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "climate_generative_model", sa.Column("rmse", sa.Float(), nullable=False)
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("train_start_year", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("train_start_month", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("train_end_year", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("train_end_month", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("validation_start_year", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("validation_start_month", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("validation_end_year", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("validation_end_month", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("test_start_year", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("test_start_month", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("test_end_year", sa.Integer(), nullable=False),
    )
    op.add_column(
        "climate_generative_model",
        sa.Column("test_end_month", sa.Integer(), nullable=False),
    )
    op.drop_column("climate_generative_model", "mse")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "climate_generative_model",
        sa.Column(
            "mse",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_column("climate_generative_model", "test_end_month")
    op.drop_column("climate_generative_model", "test_end_year")
    op.drop_column("climate_generative_model", "test_start_month")
    op.drop_column("climate_generative_model", "test_start_year")
    op.drop_column("climate_generative_model", "validation_end_month")
    op.drop_column("climate_generative_model", "validation_end_year")
    op.drop_column("climate_generative_model", "validation_start_month")
    op.drop_column("climate_generative_model", "validation_start_year")
    op.drop_column("climate_generative_model", "train_end_month")
    op.drop_column("climate_generative_model", "train_end_year")
    op.drop_column("climate_generative_model", "train_start_month")
    op.drop_column("climate_generative_model", "train_start_year")
    op.drop_column("climate_generative_model", "rmse")
    # ### end Alembic commands ###
